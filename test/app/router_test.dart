import 'package:flutter/material.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:go_router/go_router.dart';
import 'package:mocktail/mocktail.dart';
import 'package:very_good_coffee_app/app/routes/routes.dart';
import 'package:very_good_coffee_app/features/favorites/favorites.dart';
import 'package:very_good_coffee_app/features/home/home.dart';

class MockGoRouter extends Mock implements GoRouter {}

class MockGoRouterState extends Mock implements GoRouterState {}

class MockBuildContext extends Mock implements BuildContext {}

void main() {
  late MockGoRouterState mockGoRouterState;
  late MockBuildContext mockBuildContext;

  setUp(() {
    mockGoRouterState = MockGoRouterState();
    mockBuildContext = MockBuildContext();
  });

  group('App Routes', () {
    test('can instantiate GoRouter', () {
      final router = GoRouter(
        routes: $appRoutes, // Automatically generated by go_router
        navigatorKey: rootNavigatorKey,
      );

      expect(router, isA<GoRouter>());
    });
    test('HomeRoute builds correctly', () {
      final routeData = HomeRoute();

      final result = routeData.build(mockBuildContext, mockGoRouterState);
      expect(result, isA<HomeScreen>());
    });

    test('FavoritesRoute builds correctly', () {
      final routeData = FavoritesRoute();

      final result = routeData.build(mockBuildContext, mockGoRouterState);
      expect(result, isA<FavoritesScreen>());
    });

    test('FavoriteDetailsRoute builds correctly with given id', () {
      const testId = '123';
      const routeData = FavoriteDetailsRoute(id: testId);

      final result = routeData.build(mockBuildContext, mockGoRouterState);
      expect(result, isA<FavoriteDetailsScreen>());
      expect((result as FavoriteDetailsScreen).id, testId);
    });
  });
}
